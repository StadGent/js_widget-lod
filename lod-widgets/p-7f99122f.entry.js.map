{"version":3,"names":["lodTableCss","LodTableStyle0","LodTable","componentWillLoad","this","queryModified","query","isNumber","itemsPerPage","_itemsPerPage","Number","paginationString","page","executeQuery","executeCountQuery","formatHeader","input","formattedString","replace","charAt","toUpperCase","slice","queryUrl","url","URL","endpoint","searchParams","set","countQuery","isFetching","response","fetch","toString","headers","Accept","ok","result","json","count","results","bindings","value","console","log","pagesResult","find","res","filteredHeaders","head","vars","filter","header","startsWith","data","push","currentPageItems","queryWithoutLimit","getQueryWithoutLimit","decrementPage","visualPage","incrementPage","render","h","key","class","map","scope","_a","item","getFormattedObjectValue","tableCaption","Fragment","id","href","ctaUrl","_b","ctaText","onClick","style","display"],"sources":["src/components/lod-table/lod-table.scss?tag=lod-table","src/components/lod-table/lod-table.tsx"],"sourcesContent":[".lod-table {\n  td {\n    -ms-word-break: break-all;\n    word-break: break-all;\n\n    // Non standard for webkit\n    word-break: break-word;\n\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    hyphens: auto;\n  }\n\n  dd {\n    -ms-word-break: break-all;\n    word-break: break-all;\n\n    // Non standard for webkit\n    word-break: break-word;\n\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    hyphens: auto;\n  }\n\n  .pager__items {\n    justify-content: center !important;\n  }\n\n  .results-text {\n    margin-bottom: 20px;\n  }\n\n  .cta-btn {\n    align-self: flex-start;\n    font-size: 16px;\n    line-height: 24px;\n    margin-left: 30px;\n    margin-bottom: 60px;\n\n    &:before {\n      content: url(\"./assets/share-icon.svg\");\n      width: 24px;\n      height: 24px;\n      margin-left: 0;\n      border-bottom: 0;\n      position: absolute;\n      vertical-align: -50%;\n      left: -30px;\n      padding-top: 1px;\n    }\n  }\n\n  .filter__results {\n    margin-left: 0;\n  }\n\n  #previous,\n  #next {\n    cursor: pointer;\n    display: block;\n  }\n}\n","import { Component, Fragment, Prop, State, h } from \"@stencil/core\";\nimport {\n  isNumber,\n  getQueryWithoutLimit,\n  getFormattedObjectValue,\n} from \"../../utils/utils\";\n\n@Component({\n  tag: \"lod-table\",\n  styleUrl: \"lod-table.scss\",\n  shadow: false,\n})\nexport class LodTable {\n  @Prop() endpoint: string;\n  @Prop() query: string;\n  @Prop() countQuery: string;\n  @Prop() itemsPerPage: string;\n  @Prop() ctaText: string;\n  @Prop() ctaUrl: string;\n  @Prop() tableCaption: string;\n\n  @State() queryModified: string;\n  @State() count: number = 0;\n  @State() page: number = 1;\n  @State() headers: string[];\n  @State() items: any[];\n  @State() paginationString: string;\n  @State() _itemsPerPage: number = 10;\n  @State() pagesResult: { page: number; result: any }[] = [];\n  @State() currentPageItems: any;\n  @State() isFetching: boolean = false;\n  @State() visualPage: number = 1;\n\n  componentWillLoad() {\n    this.queryModified = this.query;\n    if (isNumber(this.itemsPerPage)) {\n      this._itemsPerPage = Number(this.itemsPerPage);\n    }\n    this.paginationString = `LIMIT ${this._itemsPerPage} OFFSET ${this._itemsPerPage * this.page - this._itemsPerPage}`;\n    this.queryModified += ` ${this.paginationString}`;\n    this.executeQuery();\n    this.executeCountQuery();\n  }\n\n  formatHeader(input: string) {\n    // Replace all underscores with spaces\n    let formattedString = input.replace(/_/g, \" \");\n\n    // Capitalize the first letter\n    formattedString =\n      formattedString.charAt(0).toUpperCase() + formattedString.slice(1);\n\n    return formattedString;\n  }\n\n  get queryUrl() {\n    const url = new URL(this.endpoint);\n    url.searchParams.set(\"query\", this.queryModified);\n    return url;\n  }\n\n  async executeCountQuery() {\n    const url = new URL(this.endpoint);\n    url.searchParams.set(\"query\", this.countQuery);\n\n    this.isFetching = true;\n    const response = await fetch(url.toString(), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/sparql-results+json\",\n      },\n    });\n\n    if (response.ok) {\n      const result: any = await response.json();\n      this.count = Number(result.results.bindings[0].count.value);\n      this.isFetching = false;\n    } else {\n      console.log(\"Error when getting count data.\");\n      console.log(this.queryModified);\n    }\n  }\n\n  async executeQuery() {\n    // Check if we have the result cached locally\n    if (!this.pagesResult.find((res) => res.page === this.page)) {\n      const response = await fetch(this.queryUrl.toString(), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          Accept: \"application/sparql-results+json\",\n        },\n      });\n\n      if (response.ok) {\n        const result: any = await response.json();\n\n        const filteredHeaders = result.head.vars.filter(\n          (header) => !header.startsWith(\"_\"),\n        );\n\n        this.headers = filteredHeaders;\n\n        const data = result.results.bindings;\n\n        this.pagesResult.push({\n          page: this.page,\n          result: data,\n        });\n\n        this.currentPageItems = data;\n      } else {\n        console.log(\"Error when getting data.\");\n        console.log(this.queryModified);\n      }\n    } else {\n      this.currentPageItems = this.pagesResult.find(\n        (res) => res.page === this.page,\n      ).result;\n    }\n  }\n\n  get queryWithoutLimit() {\n    return getQueryWithoutLimit(this.queryModified, this.paginationString);\n  }\n\n  async decrementPage() {\n    if (this.page > 1) {\n      this.queryModified = this.queryWithoutLimit;\n      this.page -= 1;\n      this.paginationString = `LIMIT ${this._itemsPerPage} OFFSET ${this._itemsPerPage * this.page - this._itemsPerPage}`;\n      this.queryModified += this.paginationString;\n      await this.executeQuery();\n      this.visualPage -= 1;\n    }\n  }\n\n  async incrementPage() {\n    if (this.page < this.count) {\n      this.queryModified = this.queryWithoutLimit;\n      this.page += 1;\n      this.paginationString = `LIMIT ${this._itemsPerPage} OFFSET ${this._itemsPerPage * this.page - this._itemsPerPage}`;\n      this.queryModified += this.paginationString;\n      await this.executeQuery();\n      this.visualPage += 1;\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"lod-table\">\n        <div class=\"responsive-table\">\n          <div class=\"table-wrapper\">\n            <table>\n              <tr>\n                {this.headers &&\n                  this.headers.map((header) => (\n                    <th scope=\"col\">{this.formatHeader(header)}</th>\n                  ))}\n              </tr>\n              {this.currentPageItems?.map((item) => (\n                <tr>\n                  {this.headers &&\n                    this.headers.map((header) => (\n                      <td>{getFormattedObjectValue(item?.[header])}</td>\n                    ))}\n                </tr>\n              ))}\n              {this.tableCaption && this.tableCaption !== \"\" && (\n                <caption class=\"sr-only\">{this.tableCaption}</caption>\n              )}\n            </table>\n          </div>\n        </div>\n\n        <div\n          aria-labelledby=\"table-without-row-headers-list-description\"\n          class=\"table-list\"\n        >\n          <ul>\n            {this.currentPageItems &&\n              this.headers &&\n              this.currentPageItems.map((item) => (\n                <li>\n                  <dl>\n                    {this.headers &&\n                      this.headers.map((header) => (\n                        <Fragment>\n                          <dt>{this.formatHeader(header)}</dt>\n                          <dd>{item?.[header].value}</dd>\n                        </Fragment>\n                      ))}\n                  </dl>\n                </li>\n              ))}\n          </ul>\n\n          {this.tableCaption && this.tableCaption !== \"\" && (\n            <div class=\"sr-only\" id=\"table-list-description\">\n              {this.tableCaption}\n            </div>\n          )}\n        </div>\n        <a\n          class=\"cta-btn\"\n          href={\n            this.ctaUrl && this.ctaUrl !== \"\"\n              ? this.ctaUrl\n              : `${this.queryUrl.toString()}`\n          }\n        >\n          {this.ctaText ?? \"Bekijk de data via ons SPARQL-endpoint\"}\n        </a>\n        {this.count !== 0 && this.currentPageItems && (\n          <nav class=\"pager\" aria-labelledby=\"pagination_1-55553\">\n            <h2 id=\"pagination_1-55553\" class=\"visually-hidden\">\n              Pagination\n            </h2>\n\n            <ul class=\"pager__items\">\n              <li\n                onClick={() =>\n                  this.visualPage === this.page ? this.decrementPage() : null\n                }\n                style={{ display: this.visualPage === 1 ? \"none\" : \"block\" }}\n                id=\"previous\"\n                class=\"previous\"\n              >\n                <a class=\"standalone-link back\">\n                  Vorige\n                  <span class=\"visually-hidden\">pagina</span>\n                </a>\n              </li>\n              <li class=\"current-page\">\n                Pagina {this.visualPage} van {this.count}\n              </li>\n\n              <li\n                onClick={() =>\n                  this.visualPage === this.page ? this.incrementPage() : null\n                }\n                style={{\n                  display: this.visualPage === this.count ? \"none\" : \"block\",\n                }}\n                id=\"next\"\n                class=\"next\"\n              >\n                <a class=\"standalone-link\">\n                  Volgende\n                  <span class=\"visually-hidden\">pagina</span>\n                </a>\n              </li>\n            </ul>\n          </nav>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}