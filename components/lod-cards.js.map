{"file":"lod-cards.js","mappings":"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","names":["LodCards"],"sources":["src/components/lod-cards/lod-cards.scss?tag=lod-cards","src/components/lod-cards/lod-cards.tsx"],"sourcesContent":[".lod-cards {\n  display: flex;\n  flex-direction: column;\n\n  .pager__items {\n    justify-content: center !important;\n  }\n\n  .results-text {\n    margin-bottom: 20px;\n  }\n\n  .cta-btn {\n    align-self: flex-start;\n    font-size: 16px;\n    line-height: 24px;\n    margin-left: 30px;\n    margin-bottom: 60px;\n\n    &:before {\n      content: url(\"./assets/share-icon.svg\");\n      width: 24px;\n      height: 24px;\n      margin-left: 0;\n      border-bottom: 0;\n      position: absolute;\n      vertical-align: -50%;\n      left: -30px;\n      padding-top: 1px;\n    }\n  }\n\n  .filter__results {\n    margin-left: 0;\n  }\n\n  #previous,\n  #next {\n    cursor: pointer;\n    display: block;\n  }\n}\n","import { Component, Prop, State, h } from \"@stencil/core\";\nimport {\n  getFormattedObjectValue,\n  getQueryWithoutLimit,\n} from \"../../utils/utils\";\n\n@Component({\n  tag: \"lod-cards\",\n  styleUrl: \"lod-cards.scss\",\n  shadow: false,\n})\nexport class LodCards {\n  @Prop() endpoint: string;\n  @Prop() query: string;\n  @Prop() countQuery: string;\n  @Prop() itemsPerPage: string;\n  @Prop() ctaText: string;\n  @Prop() ctaUrl: string;\n\n  @State() queryModified: string;\n  @State() count: number = 0;\n  @State() page: number = 1;\n  @State() items: any[];\n  @State() paginationString: string;\n  @State() _itemsPerPage: number = 10;\n  @State() pagesResult: { page: number; result: any }[] = [];\n  @State() currentPageItems: any;\n  @State() isFetching: boolean = false;\n  @State() visualPage: number = 1;\n\n  componentWillLoad() {\n    this.queryModified = this.query;\n    if (\n      this.itemsPerPage &&\n      this.itemsPerPage !== \"\" &&\n      Number(this.itemsPerPage)\n    ) {\n      this._itemsPerPage = Number(this.itemsPerPage);\n    }\n    this.paginationString = `LIMIT ${this._itemsPerPage} OFFSET ${this._itemsPerPage * this.page - this._itemsPerPage}`;\n    this.queryModified += ` ${this.paginationString}`;\n    this.executeQuery();\n    this.executeCountQuery();\n  }\n\n  get queryUrl() {\n    const url = new URL(this.endpoint);\n    url.searchParams.set(\"query\", this.queryModified);\n    return url;\n  }\n\n  async executeCountQuery() {\n    const url = new URL(this.endpoint);\n    url.searchParams.set(\"query\", this.countQuery);\n\n    this.isFetching = true;\n    const response = await fetch(url.toString(), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Accept: \"application/sparql-results+json\",\n      },\n    });\n\n    if (response.ok) {\n      const result: any = await response.json();\n      this.count = Number(result.results.bindings[0].count.value);\n      this.isFetching = false;\n    } else {\n      console.log(\"Error when getting count data.\");\n      console.log(this.queryModified);\n    }\n  }\n\n  async executeQuery() {\n    // Check if we have the result cached locally\n    if (!this.pagesResult.find((res) => res.page === this.page)) {\n      const response = await fetch(this.queryUrl.toString(), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n          Accept: \"application/sparql-results+json\",\n        },\n      });\n\n      if (response.ok) {\n        const result: any = await response.json();\n\n        const data = result.results.bindings;\n\n        this.pagesResult.push({\n          page: this.page,\n          result: data,\n        });\n\n        this.currentPageItems = data;\n      } else {\n        console.log(\"Error when getting data.\");\n        console.log(this.queryModified);\n      }\n    } else {\n      this.currentPageItems = this.pagesResult.find(\n        (res) => res.page === this.page,\n      ).result;\n    }\n  }\n\n  get queryWithoutLimit() {\n    return getQueryWithoutLimit(this.queryModified, this.paginationString);\n  }\n\n  async decrementPage() {\n    if (this.page > 1) {\n      this.queryModified = this.queryWithoutLimit;\n      this.page -= 1;\n\n      this.paginationString = `LIMIT ${this._itemsPerPage} OFFSET ${this._itemsPerPage * this.page - this._itemsPerPage}`;\n      this.queryModified += this.paginationString;\n      await this.executeQuery();\n      this.visualPage -= 1;\n    }\n  }\n\n  async incrementPage() {\n    if (this.page < this.count) {\n      this.queryModified = this.queryWithoutLimit;\n      this.page += 1;\n      this.paginationString = `LIMIT ${this._itemsPerPage} OFFSET ${this._itemsPerPage * this.page - this._itemsPerPage}`;\n      this.queryModified += this.paginationString;\n      await this.executeQuery();\n      this.visualPage += 1;\n    }\n  }\n\n  render() {\n    if (this.count !== 0 && this.currentPageItems) {\n      return (\n        <div class=\"lod-cards\">\n          <span class=\"results-text\">\n            <b>Er zijn {this.count} resultaten</b>\n          </span>\n          <ul class=\"filter__results\">\n            {this.currentPageItems?.map((item) => (\n              <lod-card\n                tag={item[\"cat\"]?.value}\n                address={item[\"loc\"]?.value}\n                card-title={\"test\"}\n                image-url={item[\"img\"]?.value}\n                description={item[\"txt\"]?.value}\n                read-more-url={item[\"url\"]?.value}\n                date={getFormattedObjectValue(item[\"dat\"])}\n              />\n            ))}\n          </ul>\n          <a\n            class=\"cta-btn\"\n            href={\n              this.ctaUrl && this.ctaUrl !== \"\"\n                ? this.ctaUrl\n                : `${this.queryUrl.toString()}`\n            }\n          >\n            {this.ctaText ?? \"Bekijk de data via ons SPARQL-endpoint\"}\n          </a>\n          {this.count !== 0 && this.currentPageItems && (\n            <nav class=\"pager\" aria-labelledby=\"pagination_1-55553\">\n              <h2 id=\"pagination_1-55553\" class=\"visually-hidden\">\n                Pagination\n              </h2>\n\n              <ul class=\"pager__items\">\n                <li\n                  onClick={() =>\n                    this.visualPage === this.page ? this.decrementPage() : null\n                  }\n                  style={{ display: this.visualPage === 1 ? \"none\" : \"block\" }}\n                  id=\"previous\"\n                  class=\"previous\"\n                >\n                  <a class=\"standalone-link back\">\n                    Vorige\n                    <span class=\"visually-hidden\">pagina</span>\n                  </a>\n                </li>\n                <li class=\"current-page\">\n                  Pagina {this.visualPage} van {this.count}\n                </li>\n\n                <li\n                  onClick={() =>\n                    this.visualPage === this.page ? this.incrementPage() : null\n                  }\n                  style={{\n                    display: this.visualPage == this.count ? \"none\" : \"block\",\n                  }}\n                  id=\"next\"\n                  class=\"next\"\n                >\n                  <a class=\"standalone-link\">\n                    Volgende\n                    <span class=\"visually-hidden\">pagina</span>\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          )}\n        </div>\n      );\n    }\n  }\n}\n"],"version":3}